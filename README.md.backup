# üá∫üá∏ dlang_module.ko
A proof of concept of Linux kernel module written in D

---

## Description

This is just a proof of concept of using D in Linux kernel space without modifying the Linux kernel code. According to that, there are some limitations:

* You can't use the kernel's macros (such as `printk`, `MODULE_LICENSE` ) directly from D, so you need to define them in a C file (and you still need to use C)
* You can call functions directly from D. Don't forget to define them in the beginning of the D file.
* Since this is a kernel module, you must use `-betterC`, you can't use D runtime (and TypeInfo, GC, OOP and 99% of almost all the features of the language)

Don't forget to check out this page: [Data Type Compatibility](https://dlang.org/spec/interfaceToC.html#data_type_compat)

Actually there is no use writing kernel module in D. I made it for fun. 

## Requirements

* [LDC](https://github.com/ldc-developers/ldc) (but you can use any D compiler, just edit the Makefile)
* GCC

## Usage

```
make
sudo insmod dlang_module.ko
```

You should see in `dmesg` something like this:

```
[44975.753290] Hello, World!
```

And if you want to unload it:

```
sudo rmmod dlang_module
```

---

# üá∑üá∫ dlang_module.ko

–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –º–æ–¥—É–ª—è —è–¥—Ä–∞ Linux –Ω–∞ D

---

## –û–ø–∏—Å–∞–Ω–∏–µ

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –Ω–∞ D –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —è–¥—Ä–∞ Linux –±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ–¥–∞ —Å–∞–º–æ–≥–æ —è–¥—Ä–∞. –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:

* –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞–∫—Ä–æ—Å—ã —è–¥—Ä–∞ (—Ç–∞–∫–∏–µ –∫–∞–∫ `printk`, `MODULE_LICENSE` ) –Ω–∞–ø—Ä—è–º—É—é –∏–∑ D, —Ç–∞–∫ —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –∏—Ö –≤ —Ñ–∞–π–ª–µ C (–∏ –í–∞–º –≤—Å—ë –µ—â—ë —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å C)
* –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∫–æ–¥–∞ –Ω–∞ D. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±—ä—è–≤–∏—Ç—å –∏—Ö –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º –Ω–∞ D.
* –¢.–∫. —ç—Ç–æ –º–æ–¥—É–ª—å —è–¥—Ä–∞, —Ç–æ –í—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `-betterC`. –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ –í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–Ω—Ç–∞–π–º D (–∏ TypeInfo, GC, –û–û–ü –∏ –ø–æ—á—Ç–∏ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —è–∑—ã–∫–∞ D).

–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É: [Data Type Compatibility](https://dlang.org/spec/interfaceToC.html#data_type_compat)

–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Å–º—ã—Å–ª–∞ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –º–æ–¥—É–ª—è —è–¥—Ä–∞ –Ω–∞ D –Ω–µ—Ç. –Ø —Å–¥–µ–ª–∞–ª —ç—Ç–æ –ø–æ –ø—Ä–∏–∫–æ–ª—É.

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

* [LDC](https://github.com/ldc-developers/ldc) (–Ω–æ –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä D, –ø—Ä–æ—Å—Ç–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ Makefile)
* GCC

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```
make
sudo insmod dlang_module.ko
```

–í `dmesg` –≤—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ —ç—Ç–æ–≥–æ:

```
[44975.753290] Hello, World!
```

–ò –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å:

```
sudo rmmod dlang_module
```